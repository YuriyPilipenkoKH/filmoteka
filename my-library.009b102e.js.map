{"mappings":"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","sources":["src/js/renderMovieCardsToLibriary.js","src/js/searchMoviesInLibrary.js"],"sourcesContent":["import {\n  renderMovieCardsToQueue,\n  renderMovieCardsToWatched,\n} from './pagination';\n\nconst refs = {\n  queueBtn: document.querySelectorAll('.header__btn-queue')[0],\n  watchedBtn: document.querySelectorAll('.header__btn-watched')[0],\n  watchedBtnMobile: document.querySelectorAll('.header__btn-watched')[1],\n  queueBtnMobile: document.querySelectorAll('.header__btn-queue')[1],\n};\n\nrefs.queueBtn.addEventListener('click', renderMovieCardsToQueueCategory);\nrefs.watchedBtn.addEventListener('click', renderMovieCardsToWatchedCategory);\nrefs.watchedBtnMobile.addEventListener(\n  'click',\n  renderMovieCardsToWatchedCategory\n);\nrefs.queueBtnMobile.addEventListener('click', renderMovieCardsToQueueCategory);\n\nrenderMovieCardsToQueue();\n\nfunction renderMovieCardsToQueueCategory() {\n  refs.queueBtn.classList.add('header__btn-category--current');\n  refs.watchedBtn.classList.remove('header__btn-category--current');\n  refs.queueBtnMobile.classList.add('header__btn-category--current');\n  refs.watchedBtnMobile.classList.remove('header__btn-category--current');\n  renderMovieCardsToQueue();\n}\n\nfunction renderMovieCardsToWatchedCategory() {\n  refs.queueBtn.classList.remove('header__btn-category--current');\n  refs.watchedBtn.classList.add('header__btn-category--current');\n  refs.queueBtnMobile.classList.remove('header__btn-category--current');\n  refs.watchedBtnMobile.classList.add('header__btn-category--current');\n\n  renderMovieCardsToWatched();\n}\n","import Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\nimport '../sass/components/_my-library.scss';\nimport '../sass/components/_img-library.scss';\nimport { refs } from './refs';\n\nconst librarySearchFormRef = document.querySelector('#library_submit');\n\nconst paginationElement = document.getElementById('pagination');\n\nconst queueBtn = document.querySelector('.header__btn-queue');\nconst watchedBtn = document.querySelector('.header__btn-watched');\n\nconst arrOfMoviesInQueue = JSON.parse(localStorage.getItem('queue')) || [];\n\nif (arrOfMoviesInQueue.length === 0) {\n  librarySearchFormRef.elements[0].disabled = true;\n  librarySearchFormRef.elements[1].disabled = true;\n}\n\ndocument.addEventListener('click', checkIsFormMustBeDisabled);\n\nexport function checkIsFormMustBeDisabled() {\n  const librarySearchFormRef = document.querySelector('#library_submit');\n  const arrOfMoviesInQueue = JSON.parse(localStorage.getItem('queue')) || [];\n  const arrOfMoviesInWatched =\n    JSON.parse(localStorage.getItem('watched')) || [];\n  if (\n    queueBtn.classList.contains('header__btn-category--current') &&\n    arrOfMoviesInQueue.length !== 0\n  ) {\n    librarySearchFormRef.elements[0].disabled = false;\n    librarySearchFormRef.elements[1].disabled = false;\n  } else if (\n    watchedBtn.classList.contains('header__btn-category--current') &&\n    arrOfMoviesInWatched.length !== 0\n  ) {\n    librarySearchFormRef.elements[0].disabled = false;\n    librarySearchFormRef.elements[1].disabled = false;\n  } else {\n    librarySearchFormRef.elements[0].disabled = true;\n    librarySearchFormRef.elements[1].disabled = true;\n  }\n}\n\nlibrarySearchFormRef.addEventListener('submit', onLibrarySearchFormSubmit);\n\nfunction onLibrarySearchFormSubmit(e) {\n  e.preventDefault();\n\n  const searchQuery = e.currentTarget.elements.query.value;\n\n  if (queueBtn.classList.contains('header__btn-category--current')) {\n    searchMovieInLibrary(searchQuery, 'queue');\n  } else if (watchedBtn.classList.contains('header__btn-category--current')) {\n    searchMovieInLibrary(searchQuery, 'watched');\n  }\n}\n\nfunction searchMovieInLibrary(searchQuery, localStorageItem) {\n  const arrOfMoviesInLibrary =\n    JSON.parse(localStorage.getItem(localStorageItem)) || [];\n  const arrOfQueryMovies = arrOfMoviesInLibrary.filter(movie =>\n    movie.title.toLowerCase().includes(searchQuery.toLowerCase().trim())\n  );\n\n  refs.galleryList.innerHTML = `<li class=\"img-library\"><span class=\"text-library\">there are no similar films in this category</span></li>`;\n\n  if (searchQuery.trim() === '') {\n    paginationElement.style.display = 'none';\n    refs.galleryList.innerHTML = `<li class=\"img-library\"><span class=\"text-library\">The search query should not be empty</span></li>`;\n    return;\n  }\n\n  if (arrOfQueryMovies.length === 0) {\n    paginationElement.style.display = 'none';\n    refs.galleryList.innerHTML = `<li class=\"img-library\"><span class=\"text-library\">There are no similar movies in this category</span></li>`;\n    return;\n  }\n\n  renderMovieCards(arrOfQueryMovies);\n  paginationElement.style.display = 'flex';\n}\n\nfunction renderMovieCards(arrOfQueryMovies) {\n  let arrOfMovies = arrOfQueryMovies || [];\n\n  if (arrOfMovies.length === 0) {\n    const ul = document.querySelector('.gallery-list');\n    const markup = `<li class=\"img-library\"><span class=\"text-library\">Please select a movie on the main page</span></li>`;\n    ul.innerHTML = markup;\n  } else {\n    const DEFAULT_POSTER_URL =\n      'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg';\n\n    const itemsPerPage = 20;\n    const totalItems = arrOfMovies.length;\n    const totalPages = Math.ceil(totalItems / itemsPerPage);\n    const ul = document.querySelector('.gallery-list');\n\n    // Create the pagination instance and attach the event listener\n    const paginationElement = document.getElementById('pagination');\n\n    const pagination = new Pagination(paginationElement, {\n      totalItems: totalItems,\n      itemsPerPage: itemsPerPage,\n      visiblePages: 5,\n      page: 1,\n      centerAlign: true,\n      firstItemClassName: 'tui-first-child',\n      lastItemClassName: 'tui-last-child',\n      template: {\n        page: '<a href=\"#\" class=\"tui-page-btn\">{{page}}</a>',\n        currentPage:\n          '<strong class=\"tui-page-btn tui-is-selected\">{{page}}</strong>',\n\n        disabledMoveButton:\n          '<span class=\"tui-page-btn tui-is-disabled tui-{{type}}\">' +\n          '<span class=\"tui-ico-{{type}}\">{{type}}</span>' +\n          '</span>',\n        moreButton:\n          '<a href=\"#\" class=\"tui-page-btn tui-{{type}}-is-ellip\">' +\n          '<span class=\"tui-ico-ellip\">...</span>' +\n          '</a>',\n      },\n      usageStatistics: false,\n    });\n    pagination.on('afterMove', function (eventData) {\n      ul.innerHTML = '';\n\n      const startIdx = (eventData.page - 1) * itemsPerPage;\n      const endIdx = startIdx + itemsPerPage;\n\n      const data = arrOfMovies;\n\n      const moviesArray = data.slice(startIdx, endIdx);\n\n      const IMG_URL = 'https://image.tmdb.org/t/p/w500';\n      const IMG_URL_RETINA = 'https://image.tmdb.org/t/p/w1280';\n      const DEFAULT_POSTER_URL =\n        'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg';\n\n      const markup = moviesArray\n        .map(({ poster_path, title, genres, id, release_date }) => {\n          const date = release_date.split('').splice(0, 4).join('');\n          let genresToShow = '';\n          const genresCount = genres.length;\n          const posterUrl = poster_path\n            ? `${IMG_URL}${poster_path}`\n            : DEFAULT_POSTER_URL;\n          \n          const srcsetChecked = poster_path\n            ? `${IMG_URL}${poster_path} 1x, ${IMG_URL_RETINA}${poster_path} 2x`\n            : DEFAULT_POSTER_URL;\n\n          if (genresCount === 1) {\n            genresToShow = `${genres[0].name}`;\n          } else if (genresCount === 2) {\n            genresToShow = `${genres[0].name}, ${genres[1].name}`;\n          } else if (genresCount > 2) {\n            genresToShow = `${genres[0].name}, ${genres[1].name}, other`;\n          }\n\n          return `<li class=\"film-card\">\n      <a href=\"modal-film.html\" class=\"film-card__link\" >\n        <div class=\"film-card__img\">\n          <img src=\"${posterUrl}\" alt=\"${title}\" srcset=\"${srcsetChecked}\" loading=\"lazy\" data-id=\"${id}\"/>\n        </div>\n        <div class=\"film-card__info\">\n          <p class=\"film-card__title\">${title}</p>\n          <p class=\"film-card__description\">${genresToShow} | ${date}</p>\n        </div>\n      </a>\n    </li>`;\n        })\n        .join('');\n\n      refs.galleryList.innerHTML = markup;\n    });\n\n    // Load the first page when the page is loaded\n    pagination.movePageTo(1);\n  }\n}\n"],"names":["$2nhTy","parcelRequire","$c46b2cb223d15c67$var$refs","queueBtn","document","querySelectorAll","watchedBtn","watchedBtnMobile","queueBtnMobile","$c46b2cb223d15c67$var$renderMovieCardsToQueueCategory","classList","add","remove","renderMovieCardsToQueue","$c46b2cb223d15c67$var$renderMovieCardsToWatchedCategory","renderMovieCardsToWatched","addEventListener","$fb9GJ","$2636201003aba50f$var$librarySearchFormRef","querySelector","$2636201003aba50f$var$paginationElement","getElementById","$2636201003aba50f$var$queueBtn","$2636201003aba50f$var$watchedBtn","$2636201003aba50f$var$searchMovieInLibrary","searchQuery","localStorageItem","arrOfQueryMovies","JSON","parse","localStorage","getItem","filter","movie","title","toLowerCase","includes","trim","$krGWQ","refs","galleryList","innerHTML","style","display","length","arrOfMovies","markup","itemsPerPage","totalItems","ul","Math","ceil","paginationElement1","pagination","$parcel$interopDefault","visiblePages","page","centerAlign","firstItemClassName","lastItemClassName","template","currentPage","disabledMoveButton","moreButton","usageStatistics","on","eventData","startIdx","endIdx","moviesArray","slice","IMG_URL","IMG_URL_RETINA","DEFAULT_POSTER_URL","map","poster_path","genres","id","release_date","date","split","splice","join","genresToShow","genresCount","posterUrl","srcsetChecked","name","movePageTo","$2636201003aba50f$var$renderMovieCards","elements","disabled","librarySearchFormRef1","arrOfMoviesInQueue1","arrOfMoviesInWatched","contains","e","preventDefault","currentTarget","query","value"],"version":3,"file":"my-library.009b102e.js.map"}