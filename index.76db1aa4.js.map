{"mappings":"2kBAAAA,EAAAC,EAAA,SCAAD,EAAAC,EAAA,S,iBCAAC,EAAAD,EAAA,S,0BAMA,MAAME,EAAgB,IAAI,EAAAC,EAAAC,eAAc,CACtCC,YAAa,GACbC,KAAM,IAGUC,SAASC,eAAe,cAEvB,IAAIC,EAAAR,GAAJ,CAAe,aAAc,CAC9CS,WAAY,IACZC,aAAc,GACdC,aAAc,EACdN,KAAM,IAEGO,GAAG,cAAcC,IAC1B,MAAMC,EAAcD,EAAMR,KAEtBS,IACFb,EAAcI,KAAOS,EACrBb,EAAcc,sBAAsBC,KAAKC,EAAAC,oB,sECxB7CpB,EAAAC,EAAA,SAIOoB,eAAeC,EAAcC,GAClC,IAIE,aAHuB,EAAAvB,EAAAwB,SACrB,sCAAsBD,oD,CAGxB,MAAOE,GACPC,QAAQC,IAAIF,E,ECXhBG,EAAA3B,EAAA,a,aCIA,SAAS4B,IAccrB,SAASsB,cAAc,kBAC/BC,IAAM,GAbnBH,EAAAI,KAAKC,MAAMC,UAAUC,OAAO,mBAC5BP,EAAAI,KAAKI,gBAAgBF,UAAUC,OAAO,mBACtCP,EAAAI,KAAKK,kBAAkBC,oBAAoB,QAASC,E,CAGtD,SAASA,EAAgBC,GACnBA,EAAEC,gBAAkBD,EAAEE,QACxBb,G,CDNJ,IAAIc,GCPJf,EAAA3B,EAAA,UAEA+B,KAAKI,gBAAgBQ,iBAAiB,QAASL,GDE3CX,EAAAI,KAAKa,YACPjB,EAAAI,KAAKa,WAAWD,iBAAiB,SAI5BvB,eAAiCE,GACtC,MACMuB,SADsBxB,EAAcC,IAChBwB,KAAKC,QAc/B,GADAL,EAZA,WACE,IAAK,IAAIM,EAAI,EAAGA,EAAIH,EAAII,OAAQD,GAAK,EACnC,GACkB,qBAAhBH,EAAIG,GAAGE,MACPL,EAAIG,GAAGE,KAAKC,SAAS,qBACrBN,EAAIG,GAAGE,KAAKC,SAAS,WAErB,OAAON,EAAIG,GAAGI,IAGlB,OAAO,I,CAEEC,GACPX,EAAU,CACZ,MAAMY,EAAc,mIAIqBZ,wMAMzCf,EAAAI,KAAKwB,cAAcC,UAAYF,EACV3B,EAAAI,KAAKwB,cAAc1B,cAAc,kBACzCC,KAAO,cACpBH,EAAAI,KAAKK,kBAAkBH,UAAUC,OAAO,mBACxCP,EAAAI,KAAKI,gBAAgBF,UAAUC,OAAO,mBACtCP,EAAAI,KAAK0B,KAAKC,MAAMC,SAAW,Q,MAE3BC,EAAAC,OAAOC,KAAK,oD,IHxCT1C,iBACL,MAGM2C,SAHiB,EAAAhE,EAAAwB,SACrB,2FAEsBuB,KAAKiB,OAE7BC,aAAaC,QAAQ,SAAUC,KAAKC,UAAUJ,G,CKAhD,GNLO3C,eAAmCd,EAAO,GAC/C,IAIE,aAHuB,EAAAP,EAAAwB,SACrB,iGAA2DjB,I,CAG7D,MAAOkB,GACPC,QAAQC,IAAIF,E,EMDhB,GAAsBP,KAAKC,EAAAC,oBAE3BQ,EAAAI,KAAKqC,YAAYzB,iBAAiB,QAAS0B,EAAAC","sources":["src/js/fetchTrendingMovies.js","src/js/getMoviesGenres.js","src/js/onSearchByTrend.js","src/js/fetchMovieTrailer.js","src/js/trailer.js","src/js/trailerWindow.js","src/index.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '90c7ff0c6a89140d8ec65b5296dfcca2';\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport async function fetchTrendingMovies(page = 1) {\n  try {\n    const response = await axios(\n      `${BASE_URL}3/trending/movie/day?api_key=${API_KEY}&page=${page}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import axios from 'axios';\nconst API_KEY = '90c7ff0c6a89140d8ec65b5296dfcca2';\n\nexport async function getMoviesGenres() {\n  const responce = await axios(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`\n  );\n  const genres = responce.data.genres;\n  //   console.log(genres);\n  localStorage.setItem('genres', JSON.stringify(genres));\n}\n","import Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\nimport { MoviesService } from './apiServiceMovies';\n// import { fetchTrendingMovies } from './fetchTrendingMovies';\nimport { renderMoviesMarkup } from './renderFilms';\n\nconst moviesService = new MoviesService({\n  searchQuery: '',\n  page: 1,\n});\n\nconst container = document.getElementById('pagination');\n\nconst pagination = new Pagination('pagination', {\n  totalItems: 500,\n  itemsPerPage: 10,\n  visiblePages: 5,\n  page: 1,\n});\npagination.on('beforeMove', event => {\n  const currentPage = event.page;\n\n  if (currentPage) {\n    moviesService.page = currentPage;\n    moviesService.fetchTrendingMovies().then(renderMoviesMarkup);\n  }\n});\n","import axios from 'axios';\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '90c7ff0c6a89140d8ec65b5296dfcca2';\n\nexport async function fetchVideoKey(id) {\n  try {\n    const response = await axios(\n      `${BASE_URL}3/movie/${id}/videos?api_key=${API_KEY}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { refs } from './refs';\nimport { fetchVideoKey } from './fetchMovieTrailer';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { onEscKeyPress } from './trailerWindow';\nif (refs.trailerBtn) {\n  refs.trailerBtn.addEventListener('click', onTrailerBtnClick);\n}\nlet videoKey;\n\nexport async function onTrailerBtnClick(id) {\n  const videoResponse = await fetchVideoKey(id);\n  const obj = videoResponse.data.results;\n  function getKey() {\n    for (let i = 0; i < obj.length; i += 1) {\n      if (\n        obj[i].name === 'Official Trailer' ||\n        obj[i].name.includes('Official Trailer') ||\n        obj[i].name.includes('Trailer')\n      ) {\n        return obj[i].key;\n      }\n    }\n    return null;\n  }\n  videoKey = getKey();\n  if (videoKey) {\n    const videoMarkup = `<iframe\n        class=\"trailer-video\"\n        width=\"100%\"\n        height=\"100%\"\n        src=\"https://www.youtube.com/embed/${videoKey}\"\n        title=\"YouTube video player\"\n        frameborder=\"0\"\n        allow=\"accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture\"\n        allowfullscreen\n      ></iframe>`;\n    refs.trailerWindow.innerHTML = videoMarkup;\n    const trailerVideo = refs.trailerWindow.querySelector('.trailer-video');\n    trailerVideo.src += '?autoplay=1';\n    refs.backdropModalFilm.classList.toggle('visually-hidden');\n    refs.trailerBackdrop.classList.toggle('visually-hidden');\n    refs.body.style.overflow = 'hidden';\n  } else {\n    Notify.info(`Sorry. ðŸ‘€ There is no trailer for this movie yet.`);\n  }\n}\n","import { refs } from './refs';\n\nrefs.trailerBackdrop.addEventListener('click', onBackdropClose);\n\nfunction onCloseVideo() {\n  stopVideo();\n  refs.modal.classList.toggle('visually-hidden');\n  refs.trailerBackdrop.classList.toggle('visually-hidden');\n  refs.backdropModalFilm.removeEventListener('click', onBackdropClose);\n}\n\nfunction onBackdropClose(e) {\n  if (e.currentTarget === e.target) {\n    onCloseVideo();\n  }\n}\n\nfunction stopVideo() {\n  const trailerVideo = document.querySelector('.trailer-video');\n  trailerVideo.src = '';\n}\n","import './sass/index.scss';\nimport './js/apiServiceMovies';\nimport './js/renderFilms';\nimport { renderMoviesMarkup } from './js/renderFilms';\nimport { refs } from './js/refs';\nimport { fetchTrendingMovies } from './js/fetchTrendingMovies';\nimport { onFormSubmit } from './js/onSearchFormSubmit';\nimport { getMoviesGenres } from './js/getMoviesGenres';\nimport { onGalleryItemClick } from './js/onGalleryItemClick';\ngetMoviesGenres();\nfetchTrendingMovies().then(renderMoviesMarkup);\n\nrefs.galleryList.addEventListener('click', onGalleryItemClick);\n\nimport './js/onSearchByTrend';\nimport './js/onSearchByName';\nimport './js/loader';\nimport './js/modalFilm';\nimport './js/scrolled';\nimport './js/modalTeam';\n\nimport './js/addMovieToLibriary';\n\nimport './js/fetchMovieTrailer';\nimport './js/trailer';\n"],"names":["$2shzp","parcelRequire","$fb9GJ","$f7ad4e7a740b5b07$var$moviesService","$8emQL","MoviesService","searchQuery","page","document","getElementById","$parcel$interopDefault","totalItems","itemsPerPage","visiblePages","on","event","currentPage","fetchTrendingMovies","then","$c9UGP","renderMoviesMarkup","async","$37c087e4a72356b5$export$3d6f09e7bda76655","id","default","error","console","log","$krGWQ","$50c899a3662ea9dc$var$onCloseVideo","querySelector","src","refs","modal","classList","toggle","trailerBackdrop","backdropModalFilm","removeEventListener","$50c899a3662ea9dc$var$onBackdropClose","e","currentTarget","target","$245a3218de44461e$var$videoKey","addEventListener","trailerBtn","obj","data","results","i","length","name","includes","key","getKey","videoMarkup","trailerWindow","innerHTML","body","style","overflow","$iQIUW","Notify","info","genres","localStorage","setItem","JSON","stringify","galleryList","$c72bu","onGalleryItemClick"],"version":3,"file":"index.76db1aa4.js.map"}