{"mappings":"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","sources":["src/js/renderFilms.js","src/js/fetchTrendingMovies.js","src/js/onSearchFormSubmit.js","src/js/fetchMoviesByName.js","src/js/loader.js","src/js/getMoviesGenres.js","src/js/pagination-main.js","src/index.js"],"sourcesContent":["import { refs } from './refs';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nconst DEFAULT_POSTER_URL =\n  'https://motivatevalmorgan.com/wp-content/uploads/2016/06/default-movie.jpg';\nfunction returnGenreName(genres, id) {\n  try {\n    const genreToFind = genres.find(genre => genre.id === id);\n    if (genreToFind) {\n      return genreToFind.name;\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\nexport function renderMoviesMarkup(response) {\n  const moviesArray = response.data.results;\n  const genres = JSON.parse(localStorage.getItem('genres'));\n  console.log(moviesArray);\n\n  const markup = moviesArray\n    .map(({ poster_path, title, genre_ids, id, release_date }) => {\n      const genresCount = genre_ids.length;\n      const date = release_date.split('').splice(0, 4).join('');\n      let genresToShow = '';\n      const posterUrl = poster_path\n        ? `${IMG_URL}${poster_path}`\n        : DEFAULT_POSTER_URL;\n\n      if (genresCount === 1) {\n        genresToShow = returnGenreName(genres, genre_ids[0]);\n      } else if (genresCount === 2) {\n        genresToShow = `${returnGenreName(\n          genres,\n          genre_ids[0]\n        )}, ${returnGenreName(genres, genre_ids[1])}`;\n      } else if (genresCount > 2) {\n        genresToShow = `${returnGenreName(\n          genres,\n          genre_ids[0]\n        )}, ${returnGenreName(genres, genre_ids[1])}, Other`;\n      }\n\n      return `<li class=\"film-card\">\n      <a href=\"modal-film.html\" class=\"film-card__link\" >\n        <div class=\"film-card__img\">\n          <img src=\"${posterUrl}\" alt=\"${title}\" loading=\"lazy\" data-id=\"${id}\"/>\n        </div>\n        <div class=\"film-card__info\">\n          <p class=\"film-card__title\">${title}</p>\n          <p class=\"film-card__description\">${genresToShow} | ${date}</p>\n        </div>\n      </a>\n    </li>`;\n    })\n    .join('');\n\n  refs.galleryList.innerHTML = markup;\n\n}\n","import axios from 'axios';\nconst API_KEY = '90c7ff0c6a89140d8ec65b5296dfcca2';\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport async function fetchTrendingMovies(page = 1) {\n  try {\n    const response = await axios(\n      `${BASE_URL}3/trending/movie/day?api_key=${API_KEY}&page=${page}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { fetchMoviesByName } from './fetchMoviesByName';\nimport { renderMoviesMarkup } from './renderFilms';\nimport { startLoader, stopLoader } from './loader';\n\nexport async function onFormSubmit(e) {\n  e.preventDefault();\n  const { query } = e.target.elements;\n  const searchQuery = query.value.trim();\n\n  if (searchQuery === '') {\n    Notify.info('Enter something');\n    return;\n  }\n  startLoader();\n  try {\n    const movies = await fetchMoviesByName(searchQuery);\n    renderMoviesMarkup(movies);\n    stopLoader();\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import axios from 'axios';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { stopLoader } from './loader';\n\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst API_KEY = '90c7ff0c6a89140d8ec65b5296dfcca2';\nexport async function fetchMoviesByName(query, page = 1) {\n  try {\n    const response = await axios(\n      `${BASE_URL}3/search/movie?api_key=${API_KEY}&include_adult=false&query=${query}&page=${page}`\n    );\n    if (response.data.results.length === 0) {\n      Notify.info(`Nothing was found for your '${query}' request`);\n      stopLoader();\n      return;\n    }\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","export const loader = document.querySelector('.backdrop-loader');\n\nexport function startLoader() {\n  loader.classList.remove('backdrop-loader--is-hidden');\n}\n\nexport function stopLoader() {\n  loader.classList.add('backdrop-loader--is-hidden');\n}","import axios from 'axios';\nconst API_KEY = '90c7ff0c6a89140d8ec65b5296dfcca2';\n\nexport async function getMoviesGenres() {\n  const responce = await axios(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`\n  );\n  const genres = responce.data.genres;\n  //   console.log(genres);\n  localStorage.setItem('genres', JSON.stringify(genres));\n}\n","const ref = document.querySelector('.pagination');\nconst back = document.querySelector('button[data-value=\"back\"]');\nconst first = document.querySelector('button[data-value=\"first\"]');\nconst second = document.querySelector('button[data-value=\"second\"]');\nconst third = document.querySelector('button[data-value=\"third\"]');\nconst fourth = document.querySelector('button[data-value=\"fourth\"]');\nconst fifth = document.querySelector('button[data-value=\"fifth\"]');\n\nlet curentPageNumber = 1;\n\narrowInteractiv(curentPageNumber);\naddActivePageClass(curentPageNumber);\n\nref.addEventListener('click', onPaginationClick);\n\nfunction onPaginationClick(e) {\n  if (e.target.nodeName !== 'BUTTON') {\n    return;\n  }\n\n  const pushedButtonData = e.target.dataset.value;\n\n  if (pushedButtonData === 'back') {\n    if (curentPageNumber > 1) {\n      curentPageNumber -= 1;\n    }\n    console.log(curentPageNumber);\n    // тут нужен фетч для запроса на страницу под номером curentPageNumber\n    // или запрос в localStorage in library\n    return changePaginTextContent(curentPageNumber);\n  }\n\n  if (pushedButtonData === 'forvard') {\n    curentPageNumber = Number(curentPageNumber) + 1;\n    console.log(curentPageNumber);\n    // тут нужен фетч для запроса на страницу под номером curentPageNumber\n    // или запрос в localStorage in library\n    return changePaginTextContent(curentPageNumber);\n  }\n\n  if (pushedButtonData !== 'back' && pushedButtonData !== 'forvard') {\n    curentPageNumber = e.target.textContent;\n    console.log(curentPageNumber);\n    // тут нужен фетч для запроса на страницу под номером curentPageNumber\n    // или запрос в localStorage in library\n    return changePaginTextContent(curentPageNumber);\n  }\n}\n\nfunction changePaginTextContent(val) {\n  if (val <= 2) {\n    first.textContent = 1;\n    second.textContent = 2;\n    third.textContent = 3;\n    fourth.textContent = 4;\n    fifth.textContent = 5;\n\n    arrowInteractiv(val);\n    addActivePageClass(val);\n    return;\n  }\n\n  first.textContent = Number(val) - 2;\n  second.textContent = Number(val) - 1;\n  third.textContent = Number(val);\n  fourth.textContent = Number(val) + 1;\n  fifth.textContent = Number(val) + 2;\n\n  arrowInteractiv(val);\n  addActivePageClass(val);\n}\n\nfunction arrowInteractiv(activePageNumber) {\n  if (activePageNumber == 1) {\n    back.setAttribute('disabled', 'disabled');\n  }\n\n  if (activePageNumber > 1) {\n    back.removeAttribute('disabled');\n  }\n}\n\nfunction addActivePageClass(activePageNumber) {\n  if (activePageNumber == 1) {\n    second.classList.remove('activePage');\n    third.classList.remove('activePage');\n    first.classList.add('activePage');\n  }\n\n  if (activePageNumber == 2) {\n    first.classList.remove('activePage');\n    third.classList.remove('activePage');\n    second.classList.add('activePage');\n  }\n\n  if (activePageNumber > 2) {\n    first.classList.remove('activePage');\n    second.classList.remove('activePage');\n    third.classList.add('activePage');\n  }\n}\n","import './sass/index.scss';\nimport './js/apiSevice';\nimport './js/renderFilms';\nimport { renderMoviesMarkup } from './js/renderFilms';\nimport { refs } from './js/refs';\nimport { fetchTrendingMovies } from './js/fetchTrendingMovies';\nimport { onFormSubmit } from './js/onSearchFormSubmit';\nimport { getMoviesGenres } from './js/getMoviesGenres';\nimport { onGalleryItemClick } from './js/onGalleryItemClick';\nimport './js/modalTeam';\ngetMoviesGenres();\nfetchTrendingMovies().then(renderMoviesMarkup);\nrefs.moviesSearchForm.addEventListener('submit', onFormSubmit);\nrefs.galleryList.addEventListener('click', onGalleryItemClick);\n\nimport './js/modalFilm';\nimport './js/scrolled';\nimport './js/modalTeam';\n\nimport './js/addMovieToLibriary';\n\nimport './js/pagination-main';\nimport './js/fetchMovieTrailer';\nimport './js/trailer';\n"],"names":["$krGWQ","parcelRequire","$8da24cb622d4991f$var$returnGenreName","genres","id","genreToFind","find","genre","name","error","console","log","$8da24cb622d4991f$export$675563976e239c21","response","moviesArray","data","results","JSON","parse","localStorage","getItem","markup","map","poster_path","title","genre_ids","release_date","genresCount","length","date","split","splice","join","genresToShow","posterUrl","refs","galleryList","innerHTML","$2shzp","$iQIUW","$bdfcdc80b4c38739$export$f4c5de44377d2946","document","querySelector","$bdfcdc80b4c38739$export$2ca9fbefb7d8a75c","classList","add","async","$905d63bfc8d207bd$export$37a4223ecda5c4cf","query","page","default","Notify","info","$aecdd9bf5418cfa3$var$ref","$aecdd9bf5418cfa3$var$back","$aecdd9bf5418cfa3$var$first","$aecdd9bf5418cfa3$var$second","$aecdd9bf5418cfa3$var$third","$aecdd9bf5418cfa3$var$fourth","$aecdd9bf5418cfa3$var$fifth","$aecdd9bf5418cfa3$var$curentPageNumber","$aecdd9bf5418cfa3$var$changePaginTextContent","val","textContent","$aecdd9bf5418cfa3$var$arrowInteractiv","$aecdd9bf5418cfa3$var$addActivePageClass","Number","activePageNumber","setAttribute","removeAttribute","remove","addEventListener","e","target","nodeName","pushedButtonData","dataset","value","setItem","stringify","then","moviesSearchForm","preventDefault","elements","searchQuery","trim","$c72bu","onGalleryItemClick"],"version":3,"file":"index.4928c3a3.js.map"}