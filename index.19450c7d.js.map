{"mappings":"6kBAAAA,EAAAC,EAAA,SCAAD,EAAAC,EAAA,S,iBCAAC,EAAAD,EAAA,S,0BAMA,MAAME,EAAgB,IAAI,EAAAC,EAAAC,eAAc,CACtCC,YAAa,GACbC,KAAM,IAGUC,SAASC,eAAe,cAEvB,IAAIC,EAAAR,GAAJ,CAAe,aAAc,CAC9CS,WAAY,IACZC,aAAc,GACdC,aAAc,EACdN,KAAM,IAEGO,GAAG,cAAcC,IAC1B,MAAMC,EAAcD,EAAMR,KAEtBS,IACFb,EAAcI,KAAOS,EACrBb,EAAcc,sBAAsBC,KAAKC,EAAAC,oB,ICxB7C,IAAAC,EAAApB,EAAA,S,mEAUAqB,EAAAC,KAAKC,iBAAiBC,iBAAiB,UAOhCC,eAA4BC,GACjCC,QAAQC,IAAIF,GACZA,EAAEG,iBAEFC,EAAoBC,YAEpB,MAAMC,MAAEA,GAAUN,EAAEO,OAAOC,SACrB7B,EAAc2B,EAAMG,MAAMC,OAIhC,GAFAN,EAAoBE,MAAQ3B,EAER,KAAhBA,EAEF,YADAe,EAAAiB,OAAOC,KAAK,oBAGZ,EAAAC,EAAAC,eACA,IACEV,EAAoBW,oBAAoBxB,KAAKC,EAAAC,qBAC7C,EAAAoB,EAAAG,cACmB,IAAIjC,EAAAR,GAAJ,CAAe,aAAc,CAC9CS,WAAY,IACZC,aAAc,GACdC,aAAc,EACdN,KAAM,IAEGO,GAAG,cAAcC,IAC1B,MAAMC,EAAcD,EAAMR,KAC1BwB,EAAoBxB,KAAOS,EAC3Be,EAAoBW,oBAAoBxB,KAAKC,EAAAC,qBAC7C,EAAAoB,EAAAG,aAAY,G,CAEd,MAAOC,GACPhB,QAAQC,IAAIe,E,KArClB,MAAMb,EAAsB,IAAI,EAAA3B,EAAAyC,qBAAoB,CAClDtC,KAAM,EACND,YAAa,K,6EFXRoB,iBACL,MAGMoB,SAHiB,EAAA9C,EAAA+C,SACrB,2FAEsBC,KAAKF,OAE7BG,aAAaC,QAAQ,SAAUC,KAAKC,UAAUN,G,CGAhD,GJLOpB,eAAmCnB,EAAO,GAC/C,IAIE,aAHuB,EAAAP,EAAA+C,SACrB,iGAA2DxC,I,CAG7D,MAAOqC,GACPhB,QAAQC,IAAIe,E,EIDhB,GAAsB1B,KAAKC,EAAAC,oBAE3BE,EAAAC,KAAK8B,YAAY5B,iBAAiB,QAAS6B,EAAAC","sources":["src/js/fetchTrendingMovies.js","src/js/getMoviesGenres.js","src/js/onSearchByTrend.js","src/js/onSearchByName.js","src/index.js"],"sourcesContent":["import axios from 'axios';\nconst API_KEY = '90c7ff0c6a89140d8ec65b5296dfcca2';\nconst BASE_URL = 'https://api.themoviedb.org/';\nconst IMG_URL = 'https://image.tmdb.org/t/p/w500';\nexport async function fetchTrendingMovies(page = 1) {\n  try {\n    const response = await axios(\n      `${BASE_URL}3/trending/movie/day?api_key=${API_KEY}&page=${page}`\n    );\n    return response;\n  } catch (error) {\n    console.log(error);\n  }\n}\n","import axios from 'axios';\nconst API_KEY = '90c7ff0c6a89140d8ec65b5296dfcca2';\n\nexport async function getMoviesGenres() {\n  const responce = await axios(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`\n  );\n  const genres = responce.data.genres;\n  //   console.log(genres);\n  localStorage.setItem('genres', JSON.stringify(genres));\n}\n","import Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\nimport { MoviesService } from './apiServiceMovies';\n// import { fetchTrendingMovies } from './fetchTrendingMovies';\nimport { renderMoviesMarkup } from './renderFilms';\n\nconst moviesService = new MoviesService({\n  searchQuery: '',\n  page: 1,\n});\n\nconst container = document.getElementById('pagination');\n\nconst pagination = new Pagination('pagination', {\n  totalItems: 500,\n  itemsPerPage: 10,\n  visiblePages: 5,\n  page: 1,\n});\npagination.on('beforeMove', event => {\n  const currentPage = event.page;\n\n  if (currentPage) {\n    moviesService.page = currentPage;\n    moviesService.fetchTrendingMovies().then(renderMoviesMarkup);\n  }\n});\n","import { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport Pagination from 'tui-pagination';\nimport 'tui-pagination/dist/tui-pagination.css';\n\nimport { fetchMoviesByName } from './fetchMoviesByName';\nimport { renderMoviesMarkup } from './renderFilms';\nimport { startLoader, stopLoader } from './loader';\nimport { refs } from './refs';\nimport { MoviesServiceByName } from './apiServiceMovies';\n\nrefs.moviesSearchForm.addEventListener('submit', onFormSubmit);\n\nconst moviesServiceByName = new MoviesServiceByName({\n  page: 1,\n  searchQuery: '',\n});\n\nexport async function onFormSubmit(e) {\n  console.log(e);\n  e.preventDefault();\n\n  moviesServiceByName.resetPage();\n\n  const { query } = e.target.elements;\n  const searchQuery = query.value.trim();\n\n  moviesServiceByName.query = searchQuery;\n\n  if (searchQuery === '') {\n    Notify.info('Enter something');\n    return;\n  } else {\n    startLoader();\n    try {\n      moviesServiceByName.fetchMoviesByName().then(renderMoviesMarkup);\n      stopLoader();\n      const pagination = new Pagination('pagination', {\n        totalItems: 500,\n        itemsPerPage: 10,\n        visiblePages: 5,\n        page: 1,\n      });\n      pagination.on('beforeMove', event => {\n        const currentPage = event.page;\n        moviesServiceByName.page = currentPage;\n        moviesServiceByName.fetchMoviesByName().then(renderMoviesMarkup);\n        stopLoader();\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }\n}\n","import './sass/index.scss';\nimport './js/apiServiceMovies';\nimport './js/renderFilms';\nimport { renderMoviesMarkup } from './js/renderFilms';\nimport { refs } from './js/refs';\nimport { fetchTrendingMovies } from './js/fetchTrendingMovies';\nimport { onFormSubmit } from './js/onSearchFormSubmit';\nimport { getMoviesGenres } from './js/getMoviesGenres';\nimport { onGalleryItemClick } from './js/onGalleryItemClick';\ngetMoviesGenres();\nfetchTrendingMovies().then(renderMoviesMarkup);\n\nrefs.galleryList.addEventListener('click', onGalleryItemClick);\n\nimport './js/onSearchByTrend';\nimport './js/onSearchByName';\nimport './js/loader';\nimport './js/modalFilm';\nimport './js/scrolled';\nimport './js/modalTeam';\n\nimport './js/addMovieToLibriary';\n\nimport './js/fetchMovieTrailer';\nimport './js/trailer';\n"],"names":["$2shzp","parcelRequire","$fb9GJ","$f7ad4e7a740b5b07$var$moviesService","$8emQL","MoviesService","searchQuery","page","document","getElementById","$parcel$interopDefault","totalItems","itemsPerPage","visiblePages","on","event","currentPage","fetchTrendingMovies","then","$c9UGP","renderMoviesMarkup","$iQIUW","$krGWQ","refs","moviesSearchForm","addEventListener","async","e","console","log","preventDefault","$e06cf6d5b6d0a698$var$moviesServiceByName","resetPage","query","target","elements","value","trim","Notify","info","$gjiCh","startLoader","fetchMoviesByName","stopLoader","error","MoviesServiceByName","genres","default","data","localStorage","setItem","JSON","stringify","galleryList","$c72bu","onGalleryItemClick"],"version":3,"file":"index.19450c7d.js.map"}